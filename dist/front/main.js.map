{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/services/user/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/create/create.component.ts","./src/app/components/create/create.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseURL:'http://localhost:4000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-header color=\"primary\">\n      <mat-card-title>If You see This then you are authenticated</mat-card-title>\n    </mat-card-header>\n  </mat-card>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <mat-grid-list cols=\"3\">\n      <mat-grid-tile colspan=\"3\">\n        <mat-card>\n          <mat-card-header color=\"primary\">\n            <mat-card-title>Login Form</mat-card-title>\n          </mat-card-header>\n          <form>\n            <mat-form-field style=\"width:400px !important\">\n              <mat-label>Email</mat-label>\n              <input matInput>\n            </mat-form-field>\n            <br>\n            <mat-form-field style=\"width:400px !important\">\n              <mat-label>Password</mat-label>\n              <input matInput>\n            </mat-form-field>\n            <br>\n            <button mat-raised-button color=\"primary\">Submit</button>\n          </form>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </section>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './components/login/login.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CreateComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule, MatInputModule, MatCardModule, MatFormFieldModule,MatGridListModule,MatSnackBarModule,FormsModule,ReactiveFormsModule,HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserService } from '../../../services/user/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: [ './create.component.css' ]\n})\nexport class CreateComponent implements OnInit {\n  constructor(private User: UserService, private router: Router,private snackBar: MatSnackBar) {}\n  signupForm = new FormGroup({\n    email: new FormControl(''),\n    phone_number: new FormControl(''),\n    name: new FormControl(''),\n    password: new FormControl('')\n  });\n  ngOnInit() {\n    \n  }\n  createUser() {\n    console.log(this.signupForm.value);\n  }\n}\n\n\n","<section>\n    <mat-grid-list cols=\"3\">\n      <mat-grid-tile colspan=\"3\">\n        <mat-card>\n          <mat-card-header color=\"primary\">\n            <mat-card-title>Signup Form</mat-card-title>\n          </mat-card-header>\n          <form>\n            <mat-form-field style=\"width:400px !important\">\n              <mat-label>Name</mat-label>\n              <input matInput>\n            </mat-form-field>\n            <br>\n            <mat-form-field style=\"width:400px !important\">\n              <mat-label>Email</mat-label>\n              <input matInput>\n            </mat-form-field>\n            <br>\n            <mat-form-field style=\"width:400px !important\">\n              <mat-label>Phone</mat-label>\n              <input matInput>\n            </mat-form-field>\n            <br>\n            <mat-form-field style=\"width:400px !important\">\n              <mat-label>Password</mat-label>\n              <input matInput>\n            </mat-form-field>\n            <br>\n            <button mat-raised-button color=\"primary\">Submit</button>\n          </form>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { HomeComponent } from './components/home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'sign-up',\n    component: CreateComponent\n  },\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}